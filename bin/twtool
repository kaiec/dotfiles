#!/bin/bash
last_start() {
	start=$(timew export | tail -2 | head -1 | jq '.start' | sed 's/"//g')
	datestr=$( echo $start | sed -e 's/T/ /' -e 's/^\([0-9][0-9][0-9][0-9]\)\([0-9][0-9]\)/\1-\2-/' -e 's/ \([0-9][0-9]\)\([0-9][0-9]\)/ \1:\2:/' )
	echo $datestr
}

last_end() {
	end=$(timew export | tail -2 | head -1 | jq '.end' | sed 's/"//g')
	datestr=$( echo $end | sed -e 's/T/ /' -e 's/^\([0-9][0-9][0-9][0-9]\)\([0-9][0-9]\)/\1-\2-/' -e 's/ \([0-9][0-9]\)\([0-9][0-9]\)/ \1:\2:/' )
	echo $datestr
}

active() {
	task active | sed -n '4p' | sed 's/^ //' | cut -f1 -d' '
}

endtime(){
	# $1 is endtime
	newend=$(date -d "$(last_start)" '+%Y-%m-%d')\ $1
	echo newend $newend
	d1=$(date -d "$newend" +%s)
	echo d1 $d1
	d2=$(date -d "$(last_end)" +%s)
	echo d2 $d2
	ddiff=$(( (d2 - d1)))
	echo ddiff $ddiff
	timew @1 shorten $ddiff secs
	echo ddiff $ddiff
	echo "Last task end time set to $1"

}

stop() {
	act=$(active)
	if [[ -z $act ]]; then
		echo "No active task, stopping time tracking."
		timew stop
	else
		task stop $act
		echo "Task $act stopped."
	fi
	if [[ $# -eq 1 ]]
	then
		endtime $1 
	fi
}
start() {
	if [[ $# -eq 0 ]]; then
		echo "Usage: start TASK [TIME]"
		return
	fi
	# $1 is task id, $2 is optional start time
	act=$(active)
	if [ -z $act ]; then
		echo "No active task"
	else
		# stop running task now or at start time of new task
		stop $2
	fi
	if [[ $1 =~ ^[0-9]+$ ]]; then
		echo "Starting task with number $1"
		task start $1
	else
		echo "Starting new task: $1"
		timew start $1
	fi
	if [ $# -eq 2 ]
	then
		echo "Starting task at $2"
		timew @1 move $2
	fi
}

asktime() {
	echo -e `date "+%H:%M"`\\n`date "+%H:00"` | rofi -dmenu -i --select-row 1 -p Uhrzeit

}

doit() {
	task=$(task rofi | sed '3 r /home/kai/.mytasks' | sed '3 a STOP\nCONTINUE\nDONE\nNEW' | sed '1,3d;s/^ /0/;/^[^0-9]/s/^/.. /;s/ /\t\t/' | head -n -2 | grep -v 0\\s | sed 's/[ ][ ]*/ /g;' | rofi -dmenu -i -p "Los geht's mit" -kb-remove-char-forward Delete -kb-custom-1 Ctrl-d)
	ret=$?
	if [ $ret -eq 1 ]; then
		echo 'User escaped'
		exit 1
	elif [ $ret -eq 10 ]; then
		echo 'Task done selected.'
		taskdone=1
	fi

	echo "Task selected: $task"
	taskid=$(echo "$task" | cut -f1)
	tasktext=$(echo "$task" | cut -f3)
	if [[ ! -z $tasktext ]]; then
		task=$tasktext
	fi
	echo "Task ID: $taskid"

	if [[ $taskid =~ ^[0-9]+$ ]]; then
		if [ -z $taskdone ]; then
			echo "Starting task $taskid"
			ttime=$(asktime)
			if [ $? -eq 1 ]; then
				echo 'User escaped'
				exit 1
			fi
			start "$taskid" "$ttime"
		else
			echo 'Task done: $taskid'
			task "done" "$taskid"
		fi
		exit 0
	elif [[ $task =~ STOP ]]; then
		ttime=$(asktime)
		if [ $? -eq 1 ]; then
			echo 'User escaped'
			exit 1
		fi
		stop $ttime
	elif [[ $task =~ DONE ]]; then
		echo "User selected DONE"
		ttime=$(asktime)
		if [ $? -eq 1 ]; then
			echo 'User escaped'
			exit 1
		fi
		act=$(active)
		if [[ -z $act ]]; then
			timew stop
		else
			echo "Task done: $act"
			task "done" "$act"
		fi
		endtime $ttime
	elif [[ $task =~ CONTINUE ]]; then
		timew continue
	elif [[ $task =~ NEW ]]; then
		todotext=$(rofi -dmenu -i -lines 0 -p "New Task")
		if [[ $? -eq 0 ]]; then
			task add $todotext
		fi
	elif [[ ! -z $task && -z $taskdone ]]; then
		ttime=$(asktime)
		if [ $? -eq 1 ]; then
			echo 'User escaped'
			exit 1
		fi
		stop $ttime
		timew start $ttime "$task"
	fi

}

status() {
	if [[ -e ~/.is_presentation ]]; then
		return
	else
		task=$(timew | grep "^Tracking .*" | sed "s/^Tracking //" | sed "s/\"//g" | sed "s/z:[^ ]*//")
		started=$(timew | grep "^  Started" | sed "s/  Started[ ]*//")
		d1=$(date -d "$started" +%s)
		d2=$(date +%s)
		ddiff=$(( (d2 - d1)))
		if [[ $task ]]
		then
			echo $task \| $(TZ=UTC date -d "@${ddiff}" +%H:%M)
		fi
	fi
}

worktime() {
	if [[ -e ~/.is_presentation ]]; then
		return
	else
		wt=$(timew summary | tail -2 | head -1 | tr -d '[:space:]'| sed 's/:[0-9][0-9]$//' | sed 's/No.*//')
		if [[ ! -z $wt ]]; then
			echo $wt
		fi
	fi
}

fun=$1
shift
$fun $@
